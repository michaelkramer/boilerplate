'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _errors = require('./errors');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Store = function () {
  function Store() {
    _classCallCheck(this, Store);
  }

  _createClass(Store, [{
    key: 'init',
    value: function init() {}
  }, {
    key: 'record',
    value: function record(name) {
      throw new _errors.DialectMissingMethod(this.constructor.name, 'record');
    }
  }, {
    key: 'delete',
    value: function _delete(name) {
      throw new _errors.DialectMissingMethod(this.constructor.name, 'delete');
    }
  }, {
    key: 'list',
    value: function list() {
      throw new _errors.DialectMissingMethod(this.constructor.name, 'list');
    }
  }]);

  return Store;
}();

exports.default = Store;